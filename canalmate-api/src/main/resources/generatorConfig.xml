<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>

	<classPathEntry location="C:\Users\changhonghao\.m2\repository\mysql\mysql-connector-java\5.1.46\mysql-connector-java-5.1.46.jar" />
	<context id="context1" targetRuntime="MyBatis3">
	    <plugin type="org.mybatis.generator.plugins.RowBoundsPlugin"></plugin>
		<commentGenerator>
			<property name="suppressDate" value="true" />
			<!-- 是否去除自动生成的注释 true：是 ： false:否 -->
			<property name="suppressAllComments" value="true" />
		</commentGenerator>
		<!--数据库链接URL，用户名、密码 -->
		<jdbcConnection driverClass="com.mysql.jdbc.Driver"
			connectionURL="jdbc:mysql://10.114.24.175:3306/canal_db?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false" userId="canal_user"
			password="canal_user" />
		<!--
       		 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer
            true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal
        -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>
		<!-- java模型创建器，是必须要的元素
        	负责：1，key类（见context的defaultModelType）；2，java类；3，查询类
	        targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；
	        targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录
	     -->
		<javaModelGenerator targetPackage="com.ppdai.canalmate.api.model.canal.server" targetProject="console-api/src/main/java">
			<!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
			<property name="enableSubPackages" value="true" />
			<!-- 从数据库返回的值被清理前后的空格  -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>
		<!-- 生成SQL map的XML文件生成器，
		        注意，在Mybatis3之后，我们可以使用mapper.xml文件+Mapper接口（或者不用mapper接口），
		            或者只使用Mapper接口+Annotation，所以，如果 javaClientGenerator配置中配置了需要生成XML的话，这个元素就必须配置
		        targetPackage/targetProject:同javaModelGenerator
		-->
		<sqlMapGenerator targetPackage="mapper" targetProject="console-api/src/main/resources">
		    <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
			<property name="enableSubPackages" value="true" />
		</sqlMapGenerator>
		<!-- 对于mybatis来说，即生成Mapper接口，注意，如果没有配置该元素，那么默认不会生成Mapper接口
	        targetPackage/targetProject:同javaModelGenerator
	        type：选择怎么生成mapper接口（在MyBatis3/MyBatis3Simple下）：
	            1，ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML；
	            2，MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中；
	            3，XMLMAPPER：会生成Mapper接口，接口完全依赖XML；
	           	注意，如果context是MyBatis3Simple：只支持ANNOTATEDMAPPER和XMLMAPPER
	    -->
		<javaClientGenerator targetPackage="com.ppdai.canalmate.api.dao.canal.server" targetProject="console-api/src/main/java"
			type="XMLMAPPER">
			<property name="enableSubPackages" value="true" />
		</javaClientGenerator>
        <!-- 配置生成表 --> 
        <table schema="" tableName="tb_config"
        enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"
        enableSelectByExample="false" selectByExampleQueryId="false">
        </table>
        <!-- <table schema="" tableName="tb_canalinstance_config"
        enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"
        enableSelectByExample="false" selectByExampleQueryId="false">
        </table> -->
	</context>
</generatorConfiguration>